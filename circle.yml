version: 2

workflows:
  version: 2
  test_n_deploy:
    jobs:
      - test-linter

      - test-node6:
          requires:
            - test-linter
      - test-node8:
          requires:
            - test-linter

      - build-docs:
          requires:
            - test-node6
            - test-node8

jobs:
  test-node8: &test-template
    docker:
      - image: circleci/node:8

    steps:
      - checkout

      - run:
          name: Install build tools
          command: sudo yarn global add codecov

      - restore_cache:
          key: node-modules-{{ checksum "yarn.lock" }}

      - run:
          name: Install dependencies
          command: |
              yarn install
              yarn run bootstrap

      - save_cache:
          key: node-modules-{{ checksum "yarn.lock" }}
          paths:
              - node_modules

      - run: yarn test

      - run:
          name: Send coverage report
          command: |
              if [ "${NODEJS}" == "4" ]; then
                codecov
              fi

      - store_test_results:
          path: junitresults.xml
          when: on_fail

  test-node6:
    <<: *test-template

    docker:
      - image: circleci/node:6

  test-linter:
    docker:
      - image: circleci/node:latest

    steps:
      - checkout

      - run:
          name: Install build tools
          command: sudo yarn global add codecov

      - restore_cache:
          key: node-modules-{{ checksum "yarn.lock" }}

      - run:
          name: Install dependencies
          command: |
              yarn install
              yarn run bootstrap

      - save_cache:
          key: node-modules-{{ checksum "yarn.lock" }}
          paths:
              - node_modules

      - run: yarn run lint

  build-docs:
    docker:
      - image: circleci/python:latest
        environment:
          PYGMENTS_NODE_COMMAND: /usr/local/bin/node

    steps:
      - checkout

      - run: sudo pip install pipenv

      - restore_cache:
          key: pipenv-{{ checksum "Pipfile.lock" }}

      - run: pipenv install

      - save_cache:
          key: pipenv-{{ checksum "Pipfile.lock" }}
          paths:
              - "{{ pipenv --venv }}"

      - run: pipenv shell "cd docs-ng && make html"

      - deploy:
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              echo "Deploying docs"
            fi
